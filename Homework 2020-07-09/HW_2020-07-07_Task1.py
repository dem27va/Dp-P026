negatives = 0                   #Вводим счетчик отрицательных множителей для реализации умножения отрицательных чисел
twoPowerIAccumulator = 0        #Переменная, в которой будет накапливаться слагаемые 2^i. Нужна для выхода из цикла раскладывания числа на слагаемые 2^i
result = 0                      #Результат произведения
i = 0                           #Показатель степени двойки, используемый при разложении числа на слагаемые 2^i


#Функция, проверяющая ввод целого числа и определяющая положительное или отрицательное число было введено
def validateInput (inputPrompt):                    #В качестве аргумента функция принимает строку с названием вводимого
    
    global negatives                                #Получаем доступ к глобальной переменной счетчика отрицательных множителей
    wrongInput = True
    
    while wrongInput:
        num = input('Введите {}: '.format(inputPrompt))
        if num.isnumeric():                         #Если введены цифры
            num = int(num)                          #Присваиваем множителю1 числовое значение и идем дальше
            wrongInput = False                      #Выхожим из  цикла

        elif num[0] == '-':                         #Если первый символ введенной строки "-"
            if num[1:].isnumeric():                 #Проверяем являются ли остальные симворлы в строке числами
                num = int(num[1:])                  #Если да, то присваиваем множителю1 числовое значение без минуса
                negatives += 1                      #Увелисчиваем счетчик отрицательных на 1 и идем дальше
                wrongInput = False                  #Выхожим из  цикла
            
            else:                                   #Если символы в строке, начиная со сторой позиции, не цифры - неправильный ввод
                print('Неверный ввод. Введите целое число')
                continue

        else:                                       #Если строка состоит не из цифр и начинается не с "-" - неправильный ввод
            print('Неверный ввод. Введите целое число')
            continue
    
    return num

number1 = validateInput('множитель 1')
number2 = validateInput('множитель 2')

#Раскалдываем число на слагаемые 2^i
while twoPowerIAccumulator != number1:              #Запускаем цикл, который работает до пока сумма салагаемых 2^i не равна раскладываемому числу
    
    if 2**i < number1 - twoPowerIAccumulator:       #Если 2^i меньше числа, которое мы хотим разложить
        i += 1                                      #Увеличиваем показатель степени на 1 и продолжаем

    elif 2**i > number1 - twoPowerIAccumulator:     #Если 2^i больше числа, которое мы хотим разложить
        twoPowerIAccumulator += 2**(i-1)            #Увеличиваем значение суммы слагаемых 2^i на значение  2^(i-1)
        result += (number2 << (i-1))                #Выполняем побитовый сдвиг и увеличиваем значение результата умножения        
        i = 0                                       #Обнуляем показатель степени двойки и переходим к новой итерации цикла с новым раскладываемым числом и обнуленным показателем степени
        
    elif 2**i == number1 - twoPowerIAccumulator:    #Если 2^i  равно числу, которе мы хотим разложить 
        twoPowerIAccumulator += 2**i                #Увеличиваем значение суммы слагаемых 2^i
        result += (number2 << i)                    #Выполняем побитовый сдвиг и увеличиваем значение результата умножения

#Выводим результат умножения с учетов ввода отрицательных чисел
if negatives == 0 or negatives % 2 == 0:
    print('Произведение: ', result)
else:
    print('Произведение: ', result * (-1))
